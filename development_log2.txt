ユーザの作成
開発用、テスト用、実装用それぞれ
mysql> grant select,insert,update,delete,alter,create,drop,index,lock tables,trigger
 on dapi_development.* to 'dapi'@'localhost' identified by 'dapi';
mysql> grant select,insert,update,delete,alter,create,drop,index,lock tables,trigger
 on dapi_test.* to 'dapi'@'localhost' identified by 'dapi';
mysql> grant select,insert,update,delete,alter,create,drop,index,lock tables,trigger
 on dapi_production.* to 'dapi'@'localhost' identified by 'dapi';

 dapi のプロジェクト作成
$rails _2.3.8_ -d mysql dapi
 
 database.yml でユーザの指定とパスワードの指定
 
rake db:create でデータベースを作成

各テーブルのモデルを作成 
$ruby script/generate scaffold Enq
 enq_id:integer page_id:integer status:integer title:string description:string css:string
 movie:string update_name:string update_date:date
 
$ruby script/generate scaffold EnqPage
 enq_id:integer page_id:integer face:string description:string interval:integer
 update_name:string update_date:date
 
$ruby script/generate scaffold EnqQuestion
 enq_id:integer num:integer question_id:integer update_name:string update_date:date

$ruby script/generate scaffold Branche
 enq_id:integer num:integer answer:string page_id:integer update_name:string update_date:date 
 
$ruby script/generate scaffold Question
 question_id:integer kind:string title:string content:string required:boolean answer_content:string
 answer_description:string update_name:string update_date:date
 
$ruby script/generate scaffold Choice
 question_id:integer choice_id:integer content:string update_name:string update_date:date

$ruby script/generate scaffold Answer
 enq_id:integer num:integer answer:string update_name:string update_date:date
 
主キーに uuid を利用する準備
gem install uuidtools

lib/uuid_helper.rb
---------------------------------------------------
require 'rubygems'
require 'uuidtools'

module UUIDHelper
  def before_create()
    self.uuid = UUID.timestamp_create().to_s
  end
end
----------------------------------------------------

各々のマイグレーションファイルを、DB設計書のとおりに記述し直す。
enq
	PKのUUID化、 null => false の追加、　enq_id のindex化とユニーク制約
enq_pages
	PKのUUID化、 null => false の追加、　enq_id,page_id,face のindex化
enq_questions
	PKのUUID化、 null => false の追加、　enq_id,num,question_id のindex化
branches
	PKのUUID化、 null => false の追加、 enq_id,num,answer,page_id のindex化
questions
	PKのUUID化、 null => false の追加、　question_id のindex化とユニーク制約
choice
	PKのUUID化、 null => false の追加、　question_id,choice_id のindex化
answers
	PKのUUID化、 null => false の追加、　enq_id,num のindex化
 

$rake db:migrate 
 
各リレーションを設定

enq
	has_many :enq_pages
enq_pages
	belongs_to :enq
	has_many :enq_questions
enq_questions
	belongs_to :enq_page
	belongs_to :question, :foreign_key => 'question_id'
	has_many :answers
	has_many :branches
branches
	belongs_to :enq_question, :foreign_key => 'page_id'
questions
	has_many :enq_questions
	has_many :choices
choice
	belongs_to :question
answers
	belongs_to :enq_questions
	
public/index.html の削除
	
	
